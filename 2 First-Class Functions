Functions are First-Class Functions


    Be stored in variables
    Be returned from a function.
    Be passed as arguments into another function.

const myFunction = function (n1, n2) {
  return n1 * n2;
};

// const myFunction = function howdy(n1, n2) {
//   return n1 * n2;
// };

myFunction(2, 4);
// 8

function average(n1, n2, n3) {
  return (n1 + n2 + n3) / 3;
}

average.length;
// 3

average.name;
// average

-----------
In many ways, a function in JavaScript can be treated as a value. Returning it from a function, storing it in a variable, and even passing it in as an argument into another function is perfectly allowed!



Question 1 of 2

How are JavaScript functions first-class functions? Select all that apply:

  A function can be returned from another function

  A function can be stored in a variable

A function can be passed in as an argument into another function


----------
const returnsAFunction = function () {
  return function () {
    console.log('Hello from inside a function');
  };
};

const newFunction = returnsAFunction();

newFunction();

returnsAFunction()();

------------------

/*

Declare a function named `higherOrderFunction` that takes no arguments,
and returns an anonymous function.

The returned function itself takes no arguments as well, and simply
returns the number 8.

*/

higherOrderFunction = function (){
  
  return function () {
    return 2 * 4;
};

};

